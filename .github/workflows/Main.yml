name: icd_in_adf2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write     # for OIDC login to Azure
  contents: read

concurrency:
  group: adf-cicd-${{ github.ref }}
  cancel-in-progress: false

env:
  # Re-use these across steps
  DEV_RESOURCE_ID: "/subscriptions/48773b9f-3806-4461-bb01-3e2a4253f178/resourceGroups/re_group987/providers/Microsoft.DataFactory/factories/datafactoryclass543"
  EXPORT_DIR: ExportedArmTemplate

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: build/package-lock.json

      - name: Sanity check workspace
        run: |
          echo "pwd=$(pwd)"
          ls -la
          echo "--- build dir ---"
          ls -la build || true

      - name: Install ADF Utilities
        working-directory: build
        run: npm ci

      # Validate ADF JSON in repo against the DEV factory (no changes in Azure)
      - name: Validate
        working-directory: build
        run: |
          npm run build validate "$GITHUB_WORKSPACE/" "${DEV_RESOURCE_ID}"

      # Export ARM template & parameters from DEV metadata (to be deployed to PROD)
      - name: Generate ARM template
        working-directory: build
        run: |
          npm run build export "$GITHUB_WORKSPACE/" "${DEV_RESOURCE_ID}" "${{ env.EXPORT_DIR }}"

      - name: Upload exported template
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.EXPORT_DIR }}
          path: build/${{ env.EXPORT_DIR }}
          if-no-files-found: error
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    environment: production  # optional: use GH Environments/approvals

    steps:
      - name: Download exported template
        uses: actions/download-artifact@v4
        with:
          name: ExportedArmTemplate
          path: ExportedArmTemplate

      # OIDC login to Azure using federated credentials
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      # Deploy to target (PROD) Data Factory
      - name: Deploy ARM template to ADF (prod)
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: re_protect
          dataFactoryName: datafactoryprotect   # <-- fix spelling if needed
          armTemplateFile: ExportedArmTemplate/ARMTemplateForFactory.json
          armTemplateParametersFile: ExportedArmTemplate/ARMTemplateParametersForFactory.json
          # IMPORTANT: If parameters file contains "factoryName": ""
          # uncomment the next line so deployments donâ€™t fail with a blank factory name.
          # additionalParameters: 'factoryName=datafactoryprotect'
          # skipAzModuleInstallation: true
